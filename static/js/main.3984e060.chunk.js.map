{"version":3,"sources":["robe.jpg","cc.jpg","Home.js","Cv.js","Stateless.js","Hobbies.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","class","Link","to","src","me","alt","className","Component","Cv","cv","Stateless","props","props_1","Hobbies","index_es","icon","faStar","color","Projects","App","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3984e060.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robe.8aae7537.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cc.09af709a.jpg\";","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport me from './robe.jpg'\n\n\nexport default class Home extends Component {\n    render() {\n      return (\n        <div>\n          <div class=\"header\">\n            <h1>Victor Florez</h1>\n            <p>Hi all</p>\n          </div>\n  \n          <div class=\"topnav\"> \n          <Link to=\"/\">Home</Link>\n          <Link to=\"/cv\">CV</Link>\n          <Link to=\"#\">Skills</Link>\n          <Link to=\"/hobbies\">Hobbies</Link>\n          <Link to=\"/projects\">Projects</Link>  \n          </div>\n  \n          <div class=\"row\">\n            <div class=\"column\">\n              <img src={me} alt=\"me\"></img>\n            </div>\n            <div class=\"column\">\n              <h2>About me</h2>\n              <p> I have recently graduated from the Univerity of York with a Mathematics degree, however I have always had a big interest in coding and automation. I began coding in Java during my time at University and quickly realised how much I enjoyed it, the satisfaction of solving a problem really entrigued me so I began to look for methods to teach myself and decided to join a bootcamp to improve my current set of skills. </p>\n            </div>\n            <div class=\"column\">\n              <h2>Current work</h2>\n              <p> Currently enrolled at a Web Development Bootcamp \"Kodiri\" which is run by an experienced Web Developer \"Ricardo Mallols\". The course finishes on the 21st of December, throught the course I will be understanding the React framework as well constantly developing in Javascript HTML5 and CSS3. As well as working with the fundemental tools of Web Developemnt I will also be working in an Agil enviroment and working in group projects. Along with these skills we will also be deploying our first projects and implementing javascript in the backend. </p>\n            </div>\n          </div>\n  \n          <div class=\"footer\">\n            <div className=\"bot\">email</div>\n            <div className=\"bot\">contact num</div>\n            <div className=\"bot\">linkedin</div>\n            <div className=\"bot\">gitty</div>\n            <div className=\"bot\">kodiri</div>\n          </div>\n          </div>\n\n      );\n    }\n  }","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport cv from './cc.jpg'\nimport './Cv.css'\n\n\nexport default class Cv extends Component {\n    render() {\n        return (\n            <div>\n                <div class=\"sidenav\">\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/cv\">CV</Link>\n                    <Link to=\"#\">Skills</Link>\n                    <Link to=\"/hobbies\">Hobbies</Link>\n                    <Link to=\"/projects\">Projects</Link>\n                </div>\n\n                <div class=\"content\">\n                    <h2>CVVVVVV</h2>\n                    <img src={cv} alt=\"me\"></img>\n                </div>\n            </div>\n\n        );\n    }\n}","import React from 'react';\n\n\nexport default function Stateless(props) {\n    return (\n            \n        <ul>\n            <li>{props.props_1}</li>\n        </ul>\n    )\n\n\n\n\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Stateless from './Stateless.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee, faStar, faStarHalf, faStarAndCrescent } from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nexport default class Hobbies extends Component {\n  render() {\n    return (\n      <div>\n        <div class=\"sidenav\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/cv\">CV</Link>\n          <Link to=\"#\">Skills</Link>\n          <Link to=\"#\">Hobbies</Link>\n          <Link to=\"/projects\">Projects</Link>\n        </div>\n        <div>\n          <Stateless props_1=\"hey\" />\n          <FontAwesomeIcon icon={faStar} />\n          <FontAwesomeIcon icon={faStar} color=\"red\" />\n        </div>\n      </div>\n\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './Projects.css'\n\nexport default class Projects extends Component {\n  render() {\n    return (\n      <div>\n        <div class=\"sidenav\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/cv\">CV</Link>\n          <Link to=\"#\">Skills</Link>\n          <Link to=\"#\">Hobbies</Link>\n          <Link to=\"#\">Projects</Link>\n        </div>\n        <div className=\"gridContainer\">\n          <div className=\"kid\">\n            <h1>kodflix</h1>\n          </div>\n          <div className=\"kid\">\n            <h1>siftr</h1>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css'\nimport Home from './Home.js'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Cv from './Cv'\nimport Hobbies  from './Hobbies.js';\nimport Projects from './Projects.js';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/cv\" component={Cv} />\n          <Route exact path=\"/hobbies\" component={Hobbies} /> \n          <Route exact path=\"/projects\" component={Projects} />   \n\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\n    <HashRouter>\n        <App />\n    </HashRouter>\n\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}